pipeline {
    agent any
    
    tools{
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment{
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/khalidshaikh362001/FullStack-Blogging-App.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs --format table -o fs.html .'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Blogging-app -Dsonar.projectKey=Blogging-app -Dsonar.java.binaries=target '''
                }
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn package'
            }
        }
        
        stage('Publish Artifacts') {
            steps {
                withMaven(globalMavenSettingsConfig: 'maven-settings', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    sh "mvn deploy"
                }
            }
        }
        
        stage('Build & Tag') {
            steps {
               script{
                   withDockerRegistry(credentialsId: '4ee659c1-42b3-471d-96eb-bb3371d5e168', toolName: 'docker') {
                   sh 'docker build -t khalid362001/bloggingapp:latest .'
                   }
               }
            }
        }
        
          stage('Trivy image Scan') {
            steps {
                sh 'trivy image --format table -o image.html khalid362001/bloggingapp:latest '
            }
        }
        
        stage('Docker Push Image') {
            steps {
               script{
                   withDockerRegistry(credentialsId: '4ee659c1-42b3-471d-96eb-bb3371d5e168', toolName: 'docker') {
                   sh 'docker push khalid362001/bloggingapp:latest'
                   }
               }
            }
        }
        
        stage('k8s deploy') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'devopsshack-cluster', contextName: '', credentialsId: 'secret-k8s-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://188cc792512d4168276097faea8d5997.gr7.ap-south-1.eks.amazonaws.com/') {
                    sh "kubectl apply -f deployment-service.yml"
                    sleep 20
                }
            }
        }
        
        stage('k8s vertification') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'devopsshack-cluster', contextName: '', credentialsId: 'secret-k8s-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://188cc792512d4168276097faea8d5997.gr7.ap-south-1.eks.amazonaws.com/') {
                    sh "kubectl get pods"
                    sh "kubectl get svc"
                }
            }
        }

    }
}
